# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
      - uses: dotnet/nbgv@master
        id: nbgv
        with:
          setAllVars: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release
      - name: Pack All Projects
        run: dotnet pack --configuration Release -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg
      - name: Push to GitHub Packages
        # if: ${{ github.event_name != 'pull_request' }}
        run: |
          dotnet nuget push **/Release/*.nupkg --skip-duplicate \
            --api-key ${{ secrets.GITHUB_TOKEN }} \
            --skip-duplicate \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
  docker:
    runs-on: ubuntu-latest
    # only run if in 'unifiedfx/UFX.Relay' -> fix for forked repos
    if: ${{ github.repository == 'unifiedfx/UFX.Relay' }}
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: "samples/Service/Host/Dockerfile"
          push: true
          tags: unifiedfx/ufx.relay.host:latest